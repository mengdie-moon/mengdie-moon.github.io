<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建属于你的免费博客!</title>
      <link href="/2025/04/26/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2!/"/>
      <url>/2025/04/26/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2!/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想要拥有一个属于自己的博客吗？通过<a href="https://pages.github.com/">GitHub Pages</a>，你可以免费搭建一个专业的个人博客网站。本文将详细介绍如何使用纯静态网页搭建一个个人博客。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="1-注册GitHub账号"><a href="#1-注册GitHub账号" class="headerlink" title="1. 注册GitHub账号"></a>1. 注册GitHub账号</h3><p>首先，我们需要注册一个GitHub账号-访问 <a href="https://github.com/">GitHub官网</a> 并点击右上角的”Sign up”按钮开始注册流程。</p><p><img src="https://e3f49eaa46b57.cdn.sohucs.com/2025/4/26/14/44/MTAwMTIyXzE3NDU2NDk4NDMyNTc=.png" alt="GitHub注册界面"></p><h3 id="2-安装Git工具"><a href="#2-安装Git工具" class="headerlink" title="2. 安装Git工具"></a>2. 安装Git工具</h3><p>接下来需要在电脑上安装Git工具，这是管理代码必不可少的工具：</p><ol><li>访问 <a href="https://git-scm.com/">Git官网</a> 下载对应系统的安装包</li><li>运行安装程序，大部分选项保持默认即可</li></ol><p>以下为详细配置项内容<br><img src="https://e3f49eaa46b57.cdn.sohucs.com/2025/4/26/14/48/MTAwMTIyXzE3NDU2NTAxMDAxNDg=.png" alt="Git安装界面"></p><h3 id="3-准备代码编辑器"><a href="#3-准备代码编辑器" class="headerlink" title="3. 准备代码编辑器"></a>3. 准备代码编辑器</h3><p>推荐使用Visual Studio Code（VS Code）作为代码编辑器：</p><ul><li>访问 <a href="https://code.visualstudio.com/">VS Code官网</a> 下载安装</li><li>下载链接：<img src="https://code.visualstudio.com/download"></li><li><img src="https://e3f49eaa46b57.cdn.sohucs.com/2025/4/26/15/44/MTAwMTIyXzE3NDU2NTM0NTkxNDI=.png"></li><li>建议安装以下扩展插件：<ul><li><img src="https://e3f49eaa46b57.cdn.sohucs.com/2025/4/26/14/50/MTAwMTIyXzE3NDU2NTAyMzkxMjQ=.png" alt="Live Server">（本地预览）</li><li><img src="https://e3f49eaa46b57.cdn.sohucs.com/2025/4/26/14/52/MTAwMTIyXzE3NDU2NTAzNTA1MjA=.png" alt="Markdown All in One">（Markdown编辑增强）</li></ul></li></ul><h2 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h2><p>按照以下步骤创建你的博客仓库：</p><ol><li>登录GitHub，点击右上角的”+”号，选择”New repository”</li><li>在创建仓库页面：<ul><li>仓库名称必须为：<code>你的用户名.github.io</code>（这将是你的博客访问地址）</li><li>添加一个简单的描述（可选）</li><li>选择”Public”公开仓库（GitHub Pages必须使用公开仓库）</li><li>勾选”Add a README file”（初始化仓库）</li><li>点击”Create repository”完成创建</li></ul></li></ol><p><img src="https://e3f49eaa46b57.cdn.sohucs.com/2025/4/26/14/59/MTAwMTIyXzE3NDU2NTA3NjM4NDA=.png" alt="创建GitHub仓库"></p><blockquote><p>注意：仓库名称必须严格按照<code>用户名.github.io</code>的格式，这是GitHub Pages的特殊要求。例如，如果你的GitHub用户名是<code>example</code>，那么仓库名就必须是<code>example.github.io</code></p></blockquote><h2 id="克隆仓库到本地"><a href="#克隆仓库到本地" class="headerlink" title="克隆仓库到本地"></a>克隆仓库到本地</h2><p>打开命令行，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/你的用户名/你的用户名.github.io.git</span><br><span class="line"><span class="built_in">cd</span> 你的用户名.github.io</span><br></pre></td></tr></table></figure><h2 id="创建博客首页"><a href="#创建博客首页" class="headerlink" title="创建博客首页"></a>创建博客首页</h2><ol><li>在仓库根目录创建<code>index.html</code>：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的博客<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: -apple-system, BlinkMacSystemFont, <span class="string">&#x27;Segoe UI&#x27;</span>, Roboto, Oxygen, Ubuntu, Cantarell, <span class="string">&#x27;Open Sans&#x27;</span>, <span class="string">&#x27;Helvetica Neue&#x27;</span>, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">1.6</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.post</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的博客<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>分享技术与生活<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到我的博客<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是我的第一篇博客文章。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行效果：<br><img src="https://e3f49eaa46b57.cdn.sohucs.com/2025/4/26/15/6/MTAwMTIyXzE3NDU2NTExNjYxNTk=.png"></p><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><ol><li>在仓库根目录创建<code>posts</code>文件夹</li><li>在<code>posts</code>文件夹中创建新的HTML文件作为博客文章</li><li>在首页添加文章链接</li></ol><p>示例文章<code>posts/first-post.html</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一篇博客 - 我的博客<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一篇博客<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">time</span>&gt;</span>2025-04-26<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是我的第一篇博客文章的内容...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行效果：<br><img src="https://e3f49eaa46b57.cdn.sohucs.com/2025/4/26/15/3/MTAwMTIyXzE3NDU2NTEwMzUwMDA=.png"></p><h2 id="提交和部署"><a href="#提交和部署" class="headerlink" title="提交和部署"></a>提交和部署</h2><p>执行以下命令将更改推送到GitHub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;添加博客文章&quot;</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure><h2 id="访问博客"><a href="#访问博客" class="headerlink" title="访问博客"></a>访问博客</h2><p>几分钟后，访问<code>https://你的用户名.github.io</code>即可看到你的博客。</p><h2 id="自定义域名（可选）"><a href="#自定义域名（可选）" class="headerlink" title="自定义域名（可选）"></a>自定义域名（可选）</h2><ol><li>购买域名</li><li>在域名提供商处添加DNS记录：<ul><li>类型：CNAME</li><li>主机记录：www</li><li>记录值：你的用户名.github.io</li></ul></li><li>在仓库根目录创建<code>CNAME</code>文件，内容为你的域名</li><li>等待DNS生效（通常需要几分钟到几小时）</li></ol><h2 id="美化博客"><a href="#美化博客" class="headerlink" title="美化博客"></a>美化博客</h2><ol><li>添加CSS样式</li><li>使用响应式设计</li><li>添加导航栏</li><li>集成评论系统（如Gitalk）</li><li>添加文章目录</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过以上步骤，你已经成功搭建了一个简单的静态博客网站。接下来你可以：</p><ul><li>继续美化页面样式</li><li>添加更多功能（如搜索、标签云等）</li><li>优化SEO</li><li>添加访问统计</li><li>定期更新内容</li></ul><p>记住，一个好的博客需要持续的维护和更新-祝你的博客之旅愉快！</p>]]></content>
      
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp登录注册页面开发实战</title>
      <link href="/2025/04/21/uniapp%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/"/>
      <url>/2025/04/21/uniapp%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h2 id="一、页面布局与表单验证"><a href="#一、页面布局与表单验证" class="headerlink" title="一、页面布局与表单验证"></a>一、页面布局与表单验证</h2><p>本节将详细介绍登录注册页面的基础布局搭建，以及如何利用 <code>uni-forms</code> 和 <code>uni-easyinput</code> 组件实现强大的表单验证功能。我们将重点关注手机号和密码的校验规则设计，确保用户输入的数据符合安全和规范要求</p><p>提供示例代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;view class=&quot;login-container&quot;&gt;</span><br><span class="line">  &lt;!-- 登录/注册切换标题 --&gt;</span><br><span class="line">  &lt;view class=&quot;auth-header&quot;&gt;</span><br><span class="line">    &lt;text :class=&quot;[&#x27;tab-item&#x27;, isLogin ? &#x27;active&#x27; : &#x27;&#x27;]&quot; @tap=&quot;switchMode(&#x27;login&#x27;)&quot;&gt;登录&lt;/text&gt;</span><br><span class="line">    &lt;text :class=&quot;[&#x27;tab-item&#x27;, !isLogin ? &#x27;active&#x27; : &#x27;&#x27;]&quot; @tap=&quot;switchMode(&#x27;register&#x27;)&quot;&gt;注册&lt;/text&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line"></span><br><span class="line">  &lt;uni-forms ref=&quot;form&quot; :model=&quot;formData&quot; class=&quot;auth-form&quot;&gt;</span><br><span class="line">    &lt;!-- 手机号输入框组 --&gt;</span><br><span class="line">    &lt;view class=&quot;input-group&quot;&gt;</span><br><span class="line">      &lt;uni-icons type=&quot;person&quot; size=&quot;20&quot; color=&quot;#666&quot;/&gt;</span><br><span class="line">      &lt;uni-easyinput </span><br><span class="line">        v-model=&quot;formData.phone&quot;</span><br><span class="line">        :trim=&quot;true&quot;</span><br><span class="line">        placeholder=&quot;请输入手机号&quot;</span><br><span class="line">        :rules=&quot;phoneRules&quot;</span><br><span class="line">        class=&quot;form-input&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 密码输入框组 --&gt;</span><br><span class="line">    &lt;view class=&quot;input-group&quot;&gt;</span><br><span class="line">      &lt;uni-icons type=&quot;locked&quot; size=&quot;20&quot; color=&quot;#666&quot;/&gt;</span><br><span class="line">      &lt;uni-easyinput</span><br><span class="line">        type=&quot;password&quot;</span><br><span class="line">        v-model=&quot;formData.password&quot;</span><br><span class="line">        placeholder=&quot;请输入密码&quot;</span><br><span class="line">        :rules=&quot;passwordRules&quot;</span><br><span class="line">        class=&quot;form-input&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 提交按钮 --&gt;</span><br><span class="line">    &lt;button class=&quot;submit-btn&quot; @tap=&quot;handleSubmit&quot;&gt;</span><br><span class="line">      &#123;&#123; isLogin ? &#x27;登录&#x27; : &#x27;注册&#x27; &#125;&#125;</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 第三方登录 --&gt;</span><br><span class="line">    &lt;view class=&quot;oauth-section&quot;&gt;</span><br><span class="line">      &lt;view class=&quot;divider&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;line&quot;&gt;&lt;/view&gt;</span><br><span class="line">        &lt;text&gt;其他登录方式&lt;/text&gt;</span><br><span class="line">        &lt;view class=&quot;line&quot;&gt;&lt;/view&gt;</span><br><span class="line">      &lt;/view&gt;</span><br><span class="line">      &lt;view class=&quot;oauth-buttons&quot;&gt;</span><br><span class="line">        &lt;button class=&quot;oauth-btn wechat&quot;&gt;</span><br><span class="line">          &lt;uni-icons type=&quot;weixin&quot; size=&quot;28&quot; color=&quot;#07c160&quot;/&gt;</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">        &lt;button class=&quot;oauth-btn apple&quot; v-if=&quot;isIOS&quot;&gt;</span><br><span class="line">          &lt;uni-icons type=&quot;apple&quot; size=&quot;28&quot; color=&quot;#000&quot;/&gt;</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">      &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">  &lt;/uni-forms&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">.login-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  padding: 40rpx;</span><br><span class="line">  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);</span><br><span class="line">  </span><br><span class="line">  .auth-header &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    margin-bottom: 60rpx;</span><br><span class="line">    </span><br><span class="line">    .tab-item &#123;</span><br><span class="line">      font-size: 32rpx;</span><br><span class="line">      color: #666;</span><br><span class="line">      padding: 20rpx 40rpx;</span><br><span class="line">      position: relative;</span><br><span class="line">      transition: all 0.3s ease;</span><br><span class="line">      </span><br><span class="line">      &amp;.active &#123;</span><br><span class="line">        color: #2979ff;</span><br><span class="line">        font-weight: 600;</span><br><span class="line">        </span><br><span class="line">        &amp;::after &#123;</span><br><span class="line">          content: &#x27;&#x27;;</span><br><span class="line">          position: absolute;</span><br><span class="line">          bottom: 0;</span><br><span class="line">          left: 50%;</span><br><span class="line">          transform: translateX(-50%);</span><br><span class="line">          width: 40rpx;</span><br><span class="line">          height: 4rpx;</span><br><span class="line">          background: #2979ff;</span><br><span class="line">          border-radius: 2rpx;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  .auth-form &#123;</span><br><span class="line">    background: rgba(255, 255, 255, 0.9);</span><br><span class="line">    border-radius: 24rpx;</span><br><span class="line">    padding: 40rpx;</span><br><span class="line">    box-shadow: 0 8rpx 24rpx rgba(0, 0, 0, 0.05);</span><br><span class="line">    </span><br><span class="line">    .input-group &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line">      background: #f8f9fa;</span><br><span class="line">      border-radius: 12rpx;</span><br><span class="line">      padding: 20rpx;</span><br><span class="line">      margin-bottom: 30rpx;</span><br><span class="line">      transition: all 0.3s ease;</span><br><span class="line">      </span><br><span class="line">      &amp;:focus-within &#123;</span><br><span class="line">        background: #fff;</span><br><span class="line">        box-shadow: 0 0 0 2rpx rgba(41, 121, 255, 0.2);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      .uni-icons &#123;</span><br><span class="line">        margin-right: 20rpx;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      .form-input &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    .submit-btn &#123;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 88rpx;</span><br><span class="line">      line-height: 88rpx;</span><br><span class="line">      text-align: center;</span><br><span class="line">      background: #2979ff;</span><br><span class="line">      color: #fff;</span><br><span class="line">      border-radius: 44rpx;</span><br><span class="line">      font-size: 32rpx;</span><br><span class="line">      margin-top: 40rpx;</span><br><span class="line">      transition: all 0.3s ease;</span><br><span class="line">      </span><br><span class="line">      &amp;:active &#123;</span><br><span class="line">        transform: scale(0.98);</span><br><span class="line">        opacity: 0.9;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  .oauth-section &#123;</span><br><span class="line">    margin-top: 60rpx;</span><br><span class="line">    </span><br><span class="line">    .divider &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line">      margin-bottom: 40rpx;</span><br><span class="line">      </span><br><span class="line">      .line &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">        height: 1rpx;</span><br><span class="line">        background: #e0e0e0;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      text &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        padding: 0 30rpx;</span><br><span class="line">        font-size: 24rpx;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    .oauth-buttons &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      gap: 40rpx;</span><br><span class="line">      </span><br><span class="line">      .oauth-btn &#123;</span><br><span class="line">        width: 88rpx;</span><br><span class="line">        height: 88rpx;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        background: #fff;</span><br><span class="line">        box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);</span><br><span class="line">        transition: all 0.3s ease;</span><br><span class="line">        </span><br><span class="line">        &amp;:active &#123;</span><br><span class="line">          transform: scale(0.95);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        &amp;.wechat &#123;</span><br><span class="line">          background: #07c160;</span><br><span class="line">          .uni-icons &#123;</span><br><span class="line">            color: #fff !important;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        &amp;.apple &#123;</span><br><span class="line">          background: #000;</span><br><span class="line">          .uni-icons &#123;</span><br><span class="line">            color: #fff !important;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 响应式布局适配 */</span><br><span class="line">@media screen and (min-width: 768px) &#123;</span><br><span class="line">  .login-container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    align-items: center;</span><br><span class="line">    </span><br><span class="line">    .auth-form &#123;</span><br><span class="line">      max-width: 460px;</span><br><span class="line">      width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">const formData = reactive(&#123;</span><br><span class="line">  phone: &#x27;&#x27;,</span><br><span class="line">  password: &#x27;&#x27;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 手机号验证规则</span><br><span class="line">const phoneRules = &#123;</span><br><span class="line">  rules: [&#123;</span><br><span class="line">    required: true,</span><br><span class="line">    errorMessage: &#x27;请输入手机号&#x27;,</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    pattern: /^1[3-9]\d&#123;9&#125;$/,</span><br><span class="line">    errorMessage: &#x27;手机号格式错误&#x27;</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 密码强度规则（至少包含字母+数字）</span><br><span class="line">const passwordRules = &#123;</span><br><span class="line">  rules: [&#123;</span><br><span class="line">    minLength: 8,</span><br><span class="line">    errorMessage: &#x27;密码至少8位&#x27;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    validateFunction: (val) =&gt; &#123;</span><br><span class="line">      return /[a-zA-Z]/.test(val) &amp;&amp; /\d/.test(val)</span><br><span class="line">    &#125;,</span><br><span class="line">    errorMessage: &#x27;需包含字母和数字&#x27;</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>通过上述代码，我们定义了手机号和密码的输入框，并配置了相应的验证规则。<code>uni-forms</code> 组件负责管理整个表单的状态和验证逻辑，而 <code>uni-easyinput</code> 则提供了便捷的输入和校验展示功能。</p><h2 id="二、状态管理与接口安全"><a href="#二、状态管理与接口安全" class="headerlink" title="二、状态管理与接口安全"></a>二、状态管理与接口安全</h2><p>在登录注册流程中，管理用户登录状态和保障接口通信安全至关重要。本节将探讨如何使用 Vuex 进行全局状态管理，以及如何通过 AES 加密增强接口请求的安全性。</p><h3 id="1-Vuex状态管理"><a href="#1-Vuex状态管理" class="headerlink" title="1. Vuex状态管理"></a>1. Vuex状态管理</h3><p>为了在应用的多个页面间共享用户的登录状态（如 <code>token</code>），我们选用 Vuex 作为全局状态管理方案。这有助于维护应用状态的一致性，并简化跨组件通信。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/user.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">state</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">token</span>: uni.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;token&#x27;</span>) || <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="title function_">SET_TOKEN</span>(<span class="params">state, token</span>) &#123;</span><br><span class="line">      state.<span class="property">token</span> = token</span><br><span class="line">      uni.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;token&#x27;</span>, token)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-接口请求加密"><a href="#2-接口请求加密" class="headerlink" title="2. 接口请求加密"></a>2. 接口请求加密</h3><p>为了保护敏感数据在传输过程中的安全，对请求参数进行加密是一种常见的做法。这里我们采用 AES 加密算法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/request.js</span></span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto-js&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encryptData</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> key = crypto.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(<span class="string">&#x27;your-secret-key&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> crypto.<span class="property">AES</span>.<span class="title function_">encrypt</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data), key, &#123;</span><br><span class="line">    <span class="attr">mode</span>: crypto.<span class="property">mode</span>.<span class="property">ECB</span></span><br><span class="line">  &#125;).<span class="title function_">toString</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 上述代码中的 <code>&#39;your-secret-key&#39;</code> 仅为示例，实际项目中密钥<strong>绝不能</strong>硬编码在前端代码中。推荐的做法是通过安全的机制（如首次握手时由后端动态下发）获取密钥，并妥善保管。</p><h2 id="三、跨端样式适配方案"><a href="#三、跨端样式适配方案" class="headerlink" title="三、跨端样式适配方案"></a>三、跨端样式适配方案</h2><p>UniApp 的核心优势之一是跨端开发。为了确保应用在不同平台（如微信小程序、H5）上都能呈现良好的视觉效果，我们需要编写能够自适应的样式。本节将展示如何使用 SCSS 和媒体查询实现跨端样式适配。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 通用样式 */</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">30</span>rpx;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 小程序特定样式 */</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">platform</span>: mp-weixin) &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20</span>rpx;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* H5端适配 */</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">platform</span>: h5) &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、进阶功能实现"><a href="#四、进阶功能实现" class="headerlink" title="四、进阶功能实现"></a>四、进阶功能实现</h2><p>除了基本的账号密码登录，现代应用通常还提供更便捷的登录方式，如第三方登录和生物识别登录。本节将介绍如何在 UniApp 中集成这些进阶功能。</p><h3 id="1-第三方登录集成"><a href="#1-第三方登录集成" class="headerlink" title="1. 第三方登录集成"></a>1. 第三方登录集成</h3><p>集成微信、Apple 等第三方平台登录可以简化用户的注册登录流程，提升用户体验。以下代码演示了如何调用 UniApp 的 API 实现微信和 Apple 登录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;view class=&quot;oauth-buttons&quot;&gt;</span><br><span class="line">  &lt;button @click=&quot;wechatLogin&quot; class=&quot;btn-wechat&quot;&gt;</span><br><span class="line">    &lt;uni-icons type=&quot;weixin&quot; size=&quot;20&quot;&gt;&lt;/uni-icons&gt;微信登录</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">  &lt;button </span><br><span class="line">    v-if=&quot;isIOS&quot;</span><br><span class="line">    @click=&quot;appleLogin&quot;</span><br><span class="line">    class=&quot;btn-apple&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;uni-icons type=&quot;apple&quot; size=&quot;20&quot;&gt;&lt;/uni-icons&gt;Apple登录</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">.login-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  padding: 40rpx;</span><br><span class="line">  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);</span><br><span class="line">  </span><br><span class="line">  .auth-header &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    margin-bottom: 60rpx;</span><br><span class="line">    </span><br><span class="line">    .tab-item &#123;</span><br><span class="line">      font-size: 32rpx;</span><br><span class="line">      color: #666;</span><br><span class="line">      padding: 20rpx 40rpx;</span><br><span class="line">      position: relative;</span><br><span class="line">      transition: all 0.3s ease;</span><br><span class="line">      </span><br><span class="line">      &amp;.active &#123;</span><br><span class="line">        color: #2979ff;</span><br><span class="line">        font-weight: 600;</span><br><span class="line">        </span><br><span class="line">        &amp;::after &#123;</span><br><span class="line">          content: &#x27;&#x27;;</span><br><span class="line">          position: absolute;</span><br><span class="line">          bottom: 0;</span><br><span class="line">          left: 50%;</span><br><span class="line">          transform: translateX(-50%);</span><br><span class="line">          width: 40rpx;</span><br><span class="line">          height: 4rpx;</span><br><span class="line">          background: #2979ff;</span><br><span class="line">          border-radius: 2rpx;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  .auth-form &#123;</span><br><span class="line">    background: rgba(255, 255, 255, 0.9);</span><br><span class="line">    border-radius: 24rpx;</span><br><span class="line">    padding: 40rpx;</span><br><span class="line">    box-shadow: 0 8rpx 24rpx rgba(0, 0, 0, 0.05);</span><br><span class="line">    </span><br><span class="line">    .input-group &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line">      background: #f8f9fa;</span><br><span class="line">      border-radius: 12rpx;</span><br><span class="line">      padding: 20rpx;</span><br><span class="line">      margin-bottom: 30rpx;</span><br><span class="line">      transition: all 0.3s ease;</span><br><span class="line">      </span><br><span class="line">      &amp;:focus-within &#123;</span><br><span class="line">        background: #fff;</span><br><span class="line">        box-shadow: 0 0 0 2rpx rgba(41, 121, 255, 0.2);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      .uni-icons &#123;</span><br><span class="line">        margin-right: 20rpx;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      .form-input &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    .submit-btn &#123;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 88rpx;</span><br><span class="line">      line-height: 88rpx;</span><br><span class="line">      text-align: center;</span><br><span class="line">      background: #2979ff;</span><br><span class="line">      color: #fff;</span><br><span class="line">      border-radius: 44rpx;</span><br><span class="line">      font-size: 32rpx;</span><br><span class="line">      margin-top: 40rpx;</span><br><span class="line">      transition: all 0.3s ease;</span><br><span class="line">      </span><br><span class="line">      &amp;:active &#123;</span><br><span class="line">        transform: scale(0.98);</span><br><span class="line">        opacity: 0.9;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  .oauth-section &#123;</span><br><span class="line">    margin-top: 60rpx;</span><br><span class="line">    </span><br><span class="line">    .divider &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line">      margin-bottom: 40rpx;</span><br><span class="line">      </span><br><span class="line">      .line &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">        height: 1rpx;</span><br><span class="line">        background: #e0e0e0;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      text &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        padding: 0 30rpx;</span><br><span class="line">        font-size: 24rpx;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    .oauth-buttons &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      gap: 40rpx;</span><br><span class="line">      </span><br><span class="line">      .oauth-btn &#123;</span><br><span class="line">        width: 88rpx;</span><br><span class="line">        height: 88rpx;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        background: #fff;</span><br><span class="line">        box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);</span><br><span class="line">        transition: all 0.3s ease;</span><br><span class="line">        </span><br><span class="line">        &amp;:active &#123;</span><br><span class="line">          transform: scale(0.95);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        &amp;.wechat &#123;</span><br><span class="line">          background: #07c160;</span><br><span class="line">          .uni-icons &#123;</span><br><span class="line">            color: #fff !important;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        &amp;.apple &#123;</span><br><span class="line">          background: #000;</span><br><span class="line">          .uni-icons &#123;</span><br><span class="line">            color: #fff !important;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 响应式布局适配 */</span><br><span class="line">@media screen and (min-width: 768px) &#123;</span><br><span class="line">  .login-container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    align-items: center;</span><br><span class="line">    </span><br><span class="line">    .auth-form &#123;</span><br><span class="line">      max-width: 460px;</span><br><span class="line">      width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">const isIOS = ref(uni.getSystemInfoSync().platform === &#x27;ios&#x27;)</span><br><span class="line"></span><br><span class="line">const wechatLogin = async () =&gt; &#123;</span><br><span class="line">  const [err, res] = await uni.login(&#123; provider: &#x27;weixin&#x27; &#125;)</span><br><span class="line">  if(res?.code) &#123;</span><br><span class="line">    // 发送code到后端换取token</span><br><span class="line">    const &#123; data &#125; = await uni.request(&#123;</span><br><span class="line">      url: &#x27;/api/oauth/wechat&#x27;,</span><br><span class="line">      method: &#x27;POST&#x27;,</span><br><span class="line">      data: &#123; code: res.code &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    store.commit(&#x27;user/SET_TOKEN&#x27;, data.token)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const appleLogin = async () =&gt; &#123;</span><br><span class="line">  const [err, res] = await uni.login(&#123; provider: &#x27;apple&#x27; &#125;)</span><br><span class="line">  // 处理Apple登录逻辑...</span><br><span class="line">  // 注意：Apple登录通常需要更复杂的配置和后端验证流程</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="五、生物识别登录"><a href="#五、生物识别登录" class="headerlink" title="五、生物识别登录"></a>五、生物识别登录</h2><p>对于支持生物识别（如指纹、Face ID）的设备，我们可以提供更便捷的登录方式。以下代码展示了如何实现生物识别登录：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/biometric.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">startBiometricAuth</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> [err, supportInfo] = <span class="keyword">await</span> uni.<span class="title function_">checkIsSupportSoterAuthentication</span>()</span><br><span class="line">    <span class="keyword">if</span> (err || !supportInfo.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;设备不支持生物识别&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> [authErr, authRes] = <span class="keyword">await</span> uni.<span class="title function_">startSoterAuthentication</span>(&#123;</span><br><span class="line">      <span class="attr">requestAuthModes</span>: supportInfo,</span><br><span class="line">      <span class="attr">challenge</span>: <span class="string">&#x27;uni-app-auth&#x27;</span>,</span><br><span class="line">      <span class="attr">authContent</span>: <span class="string">&#x27;请验证生物识别&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (authErr) &#123;</span><br><span class="line">      <span class="keyword">throw</span> authErr</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> authRes</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;生物识别失败:&#x27;</span>, error)</span><br><span class="line">    <span class="keyword">throw</span> error</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、Node-js后端实现"><a href="#六、Node-js后端实现" class="headerlink" title="六、Node.js后端实现"></a>六、Node.js后端实现</h2><p>本节将详细介绍如何使用Node.js实现登录注册系统的后端服务，包括项目搭建、数据库设计、API实现以及安全措施等关键内容。</p><h3 id="1-项目初始化与环境搭建"><a href="#1-项目初始化与环境搭建" class="headerlink" title="1. 项目初始化与环境搭建"></a>1. 项目初始化与环境搭建</h3><p>首先创建项目目录并初始化package.json，安装必要的依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> uniapp-auth-server</span><br><span class="line"><span class="built_in">cd</span> uniapp-auth-server</span><br><span class="line">npm init -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装核心依赖</span></span><br><span class="line">npm install express mongoose bcryptjs jsonwebtoken redis express-rate-limit cors dotenv</span><br></pre></td></tr></table></figure><p>创建项目的基本目录结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uniapp-auth-server/</span><br><span class="line">├── config/           # 配置文件</span><br><span class="line">├── models/          # 数据库模型</span><br><span class="line">├── routes/          # 路由定义</span><br><span class="line">├── controllers/     # 业务逻辑</span><br><span class="line">├── middlewares/     # 中间件</span><br><span class="line">├── utils/           # 工具函数</span><br><span class="line">└── app.js           # 入口文件</span><br></pre></td></tr></table></figure><h3 id="2-数据库设计"><a href="#2-数据库设计" class="headerlink" title="2. 数据库设计"></a>2. 数据库设计</h3><p>使用MongoDB设计用户和验证码相关的数据模型：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// models/user.js</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bcrypt = <span class="built_in">require</span>(<span class="string">&#x27;bcryptjs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userSchema = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">phone</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">unique</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">validate</span>: &#123;</span><br><span class="line">      <span class="attr">validator</span>: <span class="keyword">function</span>(<span class="params">v</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="regexp">/^1[3-9]\d&#123;9&#125;$/</span>.<span class="title function_">test</span>(v);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;手机号格式不正确&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">password</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">minlength</span>: <span class="number">8</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">refreshToken</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">lastLoginAt</span>: <span class="title class_">Date</span>,</span><br><span class="line">  <span class="attr">createdAt</span>: &#123; <span class="attr">type</span>: <span class="title class_">Date</span>, <span class="attr">default</span>: <span class="title class_">Date</span>.<span class="property">now</span> &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 密码加密中间件</span></span><br><span class="line">userSchema.<span class="title function_">pre</span>(<span class="string">&#x27;save&#x27;</span>, <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">next</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isModified</span>(<span class="string">&#x27;password&#x27;</span>)) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">password</span> = <span class="keyword">await</span> bcrypt.<span class="title function_">hash</span>(<span class="variable language_">this</span>.<span class="property">password</span>, <span class="number">10</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证密码方法</span></span><br><span class="line">userSchema.<span class="property">methods</span>.<span class="property">comparePassword</span> = <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">password</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> bcrypt.<span class="title function_">compare</span>(password, <span class="variable language_">this</span>.<span class="property">password</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;User&#x27;</span>, userSchema);</span><br><span class="line"></span><br><span class="line"><span class="comment">// models/verifyCode.js</span></span><br><span class="line"><span class="keyword">const</span> verifyCodeSchema = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">phone</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">code</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">type</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">enum</span>: [<span class="string">&#x27;register&#x27;</span>, <span class="string">&#x27;login&#x27;</span>, <span class="string">&#x27;reset&#x27;</span>],</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">expireAt</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Date</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() + <span class="number">5</span> * <span class="number">60</span> * <span class="number">1000</span>), <span class="comment">// 5分钟有效期</span></span><br><span class="line">    <span class="attr">index</span>: &#123; <span class="attr">expires</span>: <span class="number">0</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;VerifyCode&#x27;</span>, verifyCodeSchema);</span><br></pre></td></tr></table></figure><h3 id="3-核心API实现"><a href="#3-核心API实现" class="headerlink" title="3. 核心API实现"></a>3. 核心API实现</h3><p>实现用户认证相关的主要接口：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// controllers/auth.js</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&#x27;../models/user&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">VerifyCode</span> = <span class="built_in">require</span>(<span class="string">&#x27;../models/verifyCode&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> redis = <span class="built_in">require</span>(<span class="string">&#x27;../utils/redis&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成Token</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">generateTokens</span> = (<span class="params">userId</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> accessToken = jwt.<span class="title function_">sign</span>(&#123; userId &#125;, process.<span class="property">env</span>.<span class="property">JWT_SECRET</span>, &#123; <span class="attr">expiresIn</span>: <span class="string">&#x27;2h&#x27;</span> &#125;);</span><br><span class="line">  <span class="keyword">const</span> refreshToken = jwt.<span class="title function_">sign</span>(&#123; userId &#125;, process.<span class="property">env</span>.<span class="property">JWT_REFRESH_SECRET</span>, &#123; <span class="attr">expiresIn</span>: <span class="string">&#x27;7d&#x27;</span> &#125;);</span><br><span class="line">  <span class="keyword">return</span> &#123; accessToken, refreshToken &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册接口</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">register</span> = <span class="title function_">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; phone, password, code &#125; = req.<span class="property">body</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 验证验证码</span></span><br><span class="line">    <span class="keyword">const</span> verifyCode = <span class="keyword">await</span> <span class="title class_">VerifyCode</span>.<span class="title function_">findOne</span>(&#123;</span><br><span class="line">      phone,</span><br><span class="line">      code,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;register&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!verifyCode) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;验证码无效&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查用户是否已存在</span></span><br><span class="line">    <span class="keyword">const</span> existingUser = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123; phone &#125;);</span><br><span class="line">    <span class="keyword">if</span> (existingUser) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;手机号已注册&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建新用户</span></span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">new</span> <span class="title class_">User</span>(&#123; phone, password &#125;);</span><br><span class="line">    <span class="keyword">await</span> user.<span class="title function_">save</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 生成Token</span></span><br><span class="line">    <span class="keyword">const</span> tokens = <span class="title function_">generateTokens</span>(user.<span class="property">_id</span>);</span><br><span class="line">    user.<span class="property">refreshToken</span> = tokens.<span class="property">refreshToken</span>;</span><br><span class="line">    <span class="keyword">await</span> user.<span class="title function_">save</span>();</span><br><span class="line">    </span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(&#123;</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;注册成功&#x27;</span>,</span><br><span class="line">      ...tokens</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;服务器错误&#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 登录接口</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">login</span> = <span class="title function_">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; phone, password &#125; = req.<span class="property">body</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查找用户</span></span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123; phone &#125;);</span><br><span class="line">    <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;用户不存在&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 验证密码</span></span><br><span class="line">    <span class="keyword">const</span> isValid = <span class="keyword">await</span> user.<span class="title function_">comparePassword</span>(password);</span><br><span class="line">    <span class="keyword">if</span> (!isValid) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;密码错误&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 生成新Token</span></span><br><span class="line">    <span class="keyword">const</span> tokens = <span class="title function_">generateTokens</span>(user.<span class="property">_id</span>);</span><br><span class="line">    user.<span class="property">refreshToken</span> = tokens.<span class="property">refreshToken</span>;</span><br><span class="line">    user.<span class="property">lastLoginAt</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">await</span> user.<span class="title function_">save</span>();</span><br><span class="line">    </span><br><span class="line">    res.<span class="title function_">json</span>(&#123;</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>,</span><br><span class="line">      ...tokens</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;服务器错误&#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送验证码</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">sendVerifyCode</span> = <span class="title function_">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; phone, type &#125; = req.<span class="property">body</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查发送频率</span></span><br><span class="line">    <span class="keyword">const</span> rateKey = <span class="string">`sms:<span class="subst">$&#123;phone&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">const</span> sendCount = <span class="keyword">await</span> redis.<span class="title function_">incr</span>(rateKey);</span><br><span class="line">    <span class="keyword">if</span> (sendCount === <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> redis.<span class="title function_">expire</span>(rateKey, <span class="number">60</span> * <span class="number">60</span>); <span class="comment">// 1小时过期</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sendCount &gt; <span class="number">5</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">429</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;发送太频繁，请稍后再试&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 生成6位验证码</span></span><br><span class="line">    <span class="keyword">const</span> code = <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>().<span class="title function_">slice</span>(-<span class="number">6</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 保存验证码</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title class_">VerifyCode</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">      phone,</span><br><span class="line">      code,</span><br><span class="line">      type</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 调用短信服务发送验证码</span></span><br><span class="line">    <span class="comment">// 此处省略实际的短信发送逻辑</span></span><br><span class="line">    </span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;验证码已发送&#x27;</span> &#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;服务器错误&#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="4-安全措施实现"><a href="#4-安全措施实现" class="headerlink" title="4. 安全措施实现"></a>4. 安全措施实现</h3><p>添加必要的安全中间件和工具函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// middlewares/auth.js</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">verifyToken</span> = <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = req.<span class="property">headers</span>.<span class="property">authorization</span>?.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)[<span class="number">1</span>];</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;未提供token&#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> decoded = jwt.<span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">JWT_SECRET</span>);</span><br><span class="line">    req.<span class="property">userId</span> = decoded.<span class="property">userId</span>;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">if</span> (error.<span class="property">name</span> === <span class="string">&#x27;TokenExpiredError&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;token已过期&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;无效的token&#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// middlewares/rateLimiter.js</span></span><br><span class="line"><span class="keyword">const</span> rateLimit = <span class="built_in">require</span>(<span class="string">&#x27;express-rate-limit&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">apiLimiter</span> = <span class="title function_">rateLimit</span>(&#123;</span><br><span class="line">  <span class="attr">windowMs</span>: <span class="number">15</span> * <span class="number">60</span> * <span class="number">1000</span>, <span class="comment">// 15分钟</span></span><br><span class="line">  <span class="attr">max</span>: <span class="number">100</span> <span class="comment">// 限制100次请求</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">loginLimiter</span> = <span class="title function_">rateLimit</span>(&#123;</span><br><span class="line">  <span class="attr">windowMs</span>: <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>, <span class="comment">// 1小时</span></span><br><span class="line">  <span class="attr">max</span>: <span class="number">5</span>, <span class="comment">// 限制5次尝试</span></span><br><span class="line">  <span class="attr">message</span>: &#123; <span class="attr">message</span>: <span class="string">&#x27;登录尝试次数过多，请稍后再试&#x27;</span> &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="5-应用入口配置"><a href="#5-应用入口配置" class="headerlink" title="5. 应用入口配置"></a>5. 应用入口配置</h3><p>最后，配置Express应用的入口文件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>).<span class="title function_">config</span>();</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&#x27;cors&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; apiLimiter &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./middlewares/rateLimiter&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 中间件配置</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>());</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line">app.<span class="title function_">use</span>(apiLimiter);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">mongoose.<span class="title function_">connect</span>(process.<span class="property">env</span>.<span class="property">MONGODB_URI</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;数据库连接成功&#x27;</span>))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;数据库连接失败:&#x27;</span>, err));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由配置</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api/auth&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;./routes/auth&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误处理</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">err, req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="property">stack</span>);</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;服务器内部错误&#x27;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3000</span>;</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`服务器运行在端口 <span class="subst">$&#123;PORT&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> uniapp </tag>
            
            <tag> 前端开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp跨平台开发指南</title>
      <link href="/2025/04/20/uniapp%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/"/>
      <url>/2025/04/20/uniapp%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="一、uniapp核心特性"><a href="#一、uniapp核心特性" class="headerlink" title="一、uniapp核心特性"></a>一、uniapp核心特性</h2><p>✅ 基于Vue.js开发体系<br>✅ 一次开发多端部署<br>✅ 支持原生插件扩展<br>✅ 丰富的API和组件库</p><h2 id="二、跨平台开发优势"><a href="#二、跨平台开发优势" class="headerlink" title="二、跨平台开发优势"></a>二、跨平台开发优势</h2><ol><li><strong>多端覆盖</strong>：同时生成iOS&#x2F;Android App、H5、微信&#x2F;支付宝小程序</li><li><strong>统一技术栈</strong>：使用Vue语法+小程序规范开发</li><li><strong>性能优化</strong>：通过weex原生渲染提升体验</li><li><strong>开发效率</strong>：代码复用率可达90%以上</li></ol><h2 id="三、典型应用场景"><a href="#三、典型应用场景" class="headerlink" title="三、典型应用场景"></a>三、典型应用场景</h2><ul><li>企业级跨平台应用</li><li>快速原型验证</li><li>小程序矩阵开发</li><li>现有H5应用原生化</li></ul><h2 id="四、最佳实践建议"><a href="#四、最佳实践建议" class="headerlink" title="四、最佳实践建议"></a>四、最佳实践建议</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 条件编译示例</span></span><br><span class="line"><span class="comment">// #ifdef MP-WEIXIN</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;微信小程序环境&#x27;</span>);</span><br><span class="line"><span class="comment">// #endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用uniapp路由</span></span><br><span class="line">uni.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/detail/detail&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>开发注意事项</strong>：</p><ul><li>使用rpx替代px实现响应式布局</li><li>合理使用条件编译处理平台差异</li><li>注意小程序包体积限制（2MB）</li><li>优先使用uniapp内置组件</li></ul><h2 id="三、开发环境搭建"><a href="#三、开发环境搭建" class="headerlink" title="三、开发环境搭建"></a>三、开发环境搭建</h2><h3 id="1-必要工具安装"><a href="#1-必要工具安装" class="headerlink" title="1. 必要工具安装"></a>1. 必要工具安装</h3><ul><li>HBuilderX 3.6+（官方IDE）</li><li>Node.js 16.x LTS</li><li>各端开发工具：微信开发者工具&#x2F;Android Studio&#x2F;Xcode</li></ul><h3 id="2-项目初始化"><a href="#2-项目初始化" class="headerlink" title="2. 项目初始化"></a>2. 项目初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建uni-app项目</span></span><br><span class="line">npx degit dcloudio/uni-preset-vue#vite my-project</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line"><span class="built_in">cd</span> my-project &amp;&amp; npm install</span><br></pre></td></tr></table></figure><h3 id="3-关键配置项"><a href="#3-关键配置项" class="headerlink" title="3. 关键配置项"></a>3. 关键配置项</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// manifest.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;MyApp&quot;</span>,</span><br><span class="line">  <span class="string">&quot;appid&quot;</span>: <span class="string">&quot;__UNI__XXXXX&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;跨平台应用&quot;</span>,</span><br><span class="line">  <span class="string">&quot;vueVersion&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、项目结构规范"><a href="#四、项目结构规范" class="headerlink" title="四、项目结构规范"></a>四、项目结构规范</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">├── pages</span><br><span class="line">│   ├── index</span><br><span class="line">│   │   ├── index.vue</span><br><span class="line">│   │   └── components</span><br><span class="line">├── static</span><br><span class="line">│   ├── logos</span><br><span class="line">├── uni_modules</span><br><span class="line">├── App.vue</span><br><span class="line">└── main.js</span><br></pre></td></tr></table></figure><h2 id="五、多端适配实战"><a href="#五、多端适配实战" class="headerlink" title="五、多端适配实战"></a>五、多端适配实战</h2><h3 id="1-平台样式适配"><a href="#1-平台样式适配" class="headerlink" title="1. 平台样式适配"></a>1. 平台样式适配</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 条件编译示例 */</span></span><br><span class="line"><span class="comment">/* #ifdef H5 */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123; <span class="attribute">height</span>: <span class="number">88px</span>; &#125;</span><br><span class="line"><span class="comment">/* #endif */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* #ifdef MP-WEIXIN */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123; <span class="attribute">height</span>: <span class="number">48</span>rpx; &#125;</span><br><span class="line"><span class="comment">/* #endif */</span></span><br></pre></td></tr></table></figure><h3 id="2-接口差异化处理"><a href="#2-接口差异化处理" class="headerlink" title="2. 接口差异化处理"></a>2. 接口差异化处理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  <span class="comment">// #ifdef APP-PLUS</span></span><br><span class="line">  <span class="keyword">return</span> plus.<span class="property">net</span>.<span class="title function_">request</span>(url)</span><br><span class="line">  <span class="comment">// #endif</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// #ifdef H5</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">fetch</span>(url)</span><br><span class="line">  <span class="comment">// #endif</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、性能优化专项"><a href="#六、性能优化专项" class="headerlink" title="六、性能优化专项"></a>六、性能优化专项</h2><h3 id="1-启动速度优化"><a href="#1-启动速度优化" class="headerlink" title="1. 启动速度优化"></a>1. 启动速度优化</h3><ul><li>启用v3编译模式</li><li>分包加载配置</li><li>静态资源CDN化</li></ul><h3 id="2-包体积控制"><a href="#2-包体积控制" class="headerlink" title="2. 包体积控制"></a>2. 包体积控制</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">chainWebpack</span>: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    config.<span class="property">optimization</span></span><br><span class="line">      .<span class="title function_">minimize</span>(<span class="literal">true</span>)</span><br><span class="line">      .<span class="title function_">splitChunks</span>(&#123; <span class="attr">chunks</span>: <span class="string">&#x27;all&#x27;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、混合开发指南"><a href="#七、混合开发指南" class="headerlink" title="七、混合开发指南"></a>七、混合开发指南</h2><h3 id="1-原生插件集成"><a href="#1-原生插件集成" class="headerlink" title="1. 原生插件集成"></a>1. 原生插件集成</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Android原生模块示例</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestModule</span> <span class="keyword">extends</span> <span class="title class_">UniModule</span> &#123;</span><br><span class="line">  <span class="meta">@UniJSMethod</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showToast</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">    Toast.makeText(getContext(), msg, Toast.LENGTH_SHORT).show();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="八、常见问题排查"><a href="#八、常见问题排查" class="headerlink" title="八、常见问题排查"></a>八、常见问题排查</h2><table><thead><tr><th>问题现象</th><th>解决方案</th></tr></thead><tbody><tr><td>白屏问题</td><td>检查v3编译模式是否开启</td></tr><tr><td>样式错乱</td><td>检查rpx单位使用情况</td></tr><tr><td>API无效</td><td>确认平台兼容性</td></tr></tbody></table><h2 id="九、调试与发布"><a href="#九、调试与发布" class="headerlink" title="九、调试与发布"></a>九、调试与发布</h2><ol><li>使用HBuilderX内置模拟器</li><li>真机调试功能</li><li>云打包服务</li><li>自动化构建流水线</li></ol><blockquote><p>官方文档：<a href="https://uniapp.dcloud.net.cn/">uniapp.dcloud.net.cn</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
